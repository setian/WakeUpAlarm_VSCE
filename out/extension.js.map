{
  "version": 3,
  "sources": ["../src/extension.ts"],
  "sourcesContent": ["import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nlet webviewPanel: vscode.WebviewPanel | undefined;\n\nexport function activate(context: vscode.ExtensionContext) {\n\n    console.log('\"wakeup-alarm\"\uC774 \uD65C\uC131\uD654\uB418\uC5C8\uC2B5\uB2C8\uB2E4.');\n\n    let lastAction: string = '';\n    let repeatCount: number = 0;\n\n    context.subscriptions.push(vscode.workspace.onDidChangeTextDocument(event => {\n        const configuration = vscode.workspace.getConfiguration('wakeupAlarm');\n        const triggerCount = configuration.get<number>('triggerCount', 20);\n        const excludedKeysInspect = configuration.inspect<string[]>('excludedKeys');\n        let excludedKeys: string[];\n\n        if (excludedKeysInspect?.globalValue === undefined && excludedKeysInspect?.workspaceValue === undefined) {\n            excludedKeys = ['<delete>'];\n        } else {\n            excludedKeys = configuration.get<string[]>('excludedKeys', []);\n        }\n\n        if (event.contentChanges.length === 0) {\n            return;\n        }\n\n        const change = event.contentChanges[event.contentChanges.length - 1];\n        let currentAction: string | null = null;\n\n        if (change.text.length === 1 && !change.text.includes('\\n')) {\n            currentAction = change.text;\n        } else if (change.text === '' && change.rangeLength > 0) {\n            currentAction = '<delete>';\n        }\n\n        if (!currentAction || excludedKeys.includes(currentAction)) {\n            if (webviewPanel) {\n                webviewPanel.webview.postMessage({ command: 'stopSound' });\n            }\n            repeatCount = 0;\n            lastAction = '';\n            return;\n        }\n\n        if (currentAction !== lastAction && webviewPanel) {\n            webviewPanel.webview.postMessage({ command: 'stopSound' });\n        }\n\n        if (currentAction === lastAction) {\n            repeatCount++;\n        } else {\n            lastAction = currentAction;\n            repeatCount = 1;\n        }\n\n        if (repeatCount >= triggerCount) {\n            repeatCount = 0;\n            vscode.window.showWarningMessage(\"Are you falling asleep? Time for a stretch! \uD83D\uDE34\");\n            playAlarmSound(context);\n        }\n    }));\n\n    // \uD14C\uC2A4\uD2B8\uB97C \uC704\uD55C \uBA85\uB839\uC5B4 \uB4F1\uB85D\n    const testAlarmCommand = vscode.commands.registerCommand('wakeupAlarm.testAlarm', () => {\n        vscode.window.showInformationMessage('Testing Wake Up Alarm!');\n        playAlarmSound(context);\n    });\n\n    context.subscriptions.push(testAlarmCommand);\n}\n\nfunction playAlarmSound(context: vscode.ExtensionContext) {\n    const mediaFolder = vscode.Uri.joinPath(context.extensionUri, 'media');\n\n    const mp3Path = vscode.Uri.joinPath(mediaFolder, 'alarm.mp3');\n    const wavPath = vscode.Uri.joinPath(mediaFolder, 'alarm.wav');\n    let soundFileUri: vscode.Uri | null = null;\n    if (fs.existsSync(mp3Path.fsPath)) {\n        soundFileUri = mp3Path;\n    } else if (fs.existsSync(wavPath.fsPath)) {\n        soundFileUri = wavPath;\n    }\n\n    const imagePath = vscode.Uri.joinPath(mediaFolder, 'pluto.png');\n    if (!fs.existsSync(imagePath.fsPath)) {\n        vscode.window.showErrorMessage(\"Image file not found in media folder: pluto.png\");\n    }\n\n    if (!soundFileUri) {\n        vscode.window.showErrorMessage(\"Sound file not found in media folder: alarm.mp3 or alarm.wav\");\n        return;\n    }\n\n    if (webviewPanel) {\n        webviewPanel.reveal(vscode.ViewColumn.One);\n    } else {\n        webviewPanel = vscode.window.createWebviewPanel(\n            'wakeupAlarm',\n            'Wake Up!',\n            vscode.ViewColumn.One,\n            {\n                enableScripts: true,\n                localResourceRoots: [mediaFolder]\n            }\n        );\n\n        webviewPanel.onDidDispose(() => {\n            webviewPanel = undefined;\n        }, null, context.subscriptions);\n    }\n    \n    const webviewSoundUri = webviewPanel.webview.asWebviewUri(soundFileUri);\n    const webviewImageUri = webviewPanel.webview.asWebviewUri(imagePath);\n\n    webviewPanel.webview.html = getWebviewContent(context);\n    webviewPanel.webview.postMessage({\n        command: 'updateMedia',\n        imageUri: webviewImageUri.toString(),\n        soundUri: webviewSoundUri.toString()\n    });\n}\n\nfunction getWebviewContent(context: vscode.ExtensionContext): string {\n    const htmlPath = vscode.Uri.joinPath(context.extensionUri, 'media', 'webview.html');\n    let htmlContent = fs.readFileSync(htmlPath.fsPath, 'utf8');\n\n    return htmlContent;\n}\n\nexport function deactivate() {}"],
  "mappings": "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",
  "names": []
}
